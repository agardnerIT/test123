apiVersion: v1
kind: ConfigMap
metadata:
  name: backstage-config
  namespace: backstage
data:
  app-config.production.yaml: |
    app:
      title: DT HOT Day - Backstage
      baseUrl: https://backstage.dtu-test-s17-2afbea.dynatrace.training

    organization:
      name: DT HOT Day - Backstage

    backend:
      baseUrl: https://backstage.dtu-test-s17-2afbea.dynatrace.training
      listen:
        port: 7007 # TODO set the port Backstage is listening on
      csp:
        # Content-Security-Policy directives follow the Helmet format: https://helmetjs.github.io/#reference
        # Default Helmet Content-Security-Policy values can be removed by setting the key to false
        connect-src: ["'self'", 'http:', 'https:']
      cors:
        origin: https://backstage.dtu-test-s17-2afbea.dynatrace.training
        methods: [GET, HEAD, PATCH, POST, PUT, DELETE]
        credentials: true
      # If you want to use Postgres see https://backstage.io/docs/tutorials/switching-sqlite-postgres/
      database:
        client: better-sqlite3
        connection: ':memory:'
      reading:
        allow:
          - host: '*.dtu-test-s17-2afbea.dynatrace.training'

    # See http://backstage.io/docs/features/techdocs/configuration
    techdocs:
      builder: 'local'
      generator:
        runIn: 'local'
      publisher:
        type: 'local'

    # See https://backstage.io/docs/auth/
    auth:
      providers: {}

    # See https://backstage.io/docs/features/software-templates/configuration
    scaffolder: {}

    # See https://backstage.io/docs/integrations/
    integrations:
    #   github:
    #     - host: github.com
    #       token: ${GITHUB_TOKEN}
      gitlab:
        - host: gitlab.dtu-test-s17-2afbea.dynatrace.training
          baseUrl: https://gitlab.dtu-test-s17-2afbea.dynatrace.training
          apiBaseUrl: https://gitlab.dtu-test-s17-2afbea.dynatrace.training/api/v4
          token: ${GITLAB_TOKEN}
    catalog:
      import:
        entityFilename: catalog-info.yaml
      locations: []
      providers:
      #   # GitHub discovery: https://backstage.io/docs/integrations/github/discovery/
      #   # Don't forget to define an integration for GitHub
      #   github:
      #     backstage:
      #       organization: backstage # TODO set your organization
      #       catalogPath: /catalog-info.yaml
      #       schedule:
      #         frequency: { minutes: 30 }
      #         timeout: { minutes: 3 }
        # GitLab discovery: https://backstage.io/docs/integrations/gitlab/discovery/
        # Don't forget to define an integration for your GitLab host(s)
        gitlab:
          public:
            host: gitlab.dtu-test-s17-2afbea.dynatrace.training
            branch: main
            skipForkedRepos: true
            entityFilename: catalog-info.yaml
            schedule:
              frequency: { minutes: 1 }
              timeout: { minutes: 3 }

    # See https://backstage.io/docs/plugins/proxying/
    proxy:
      # ArgoCD plugin: https://roadie.io/backstage/plugins/argo-cd/
      '/argocd/api':
        target: https://argo.dtu-test-s17-2afbea.dynatrace.training/api/v1/
        changeOrigin: true
        # Set to false if your ArgoCD api has self-signed cert
        secure: true
        headers:
          Cookie:
            $env: ${ARGOCD_TOKEN}

    # See https://backstage.io/docs/features/kubernetes/configuration
    kubernetes:
      serviceLocatorMethod:
        type: multiTenant
      clusterLocatorMethods:
        - type: config
          clusters: []

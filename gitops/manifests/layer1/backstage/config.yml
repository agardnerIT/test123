apiVersion: v1
kind: ConfigMap
metadata:
  name: backstage-config
  namespace: backstage
data:
  app-config.production.yaml: |
    app:
      title: Backstage Playground
      baseUrl: http://backstage.agardner.hotday.keptn.sh

    organization:
      name: Backstage Playground

    backend:
      baseUrl: https://backstage.agardner.hotday.keptn.sh
      listen:
        port: 80 # TODO set the port Backstage is listening on
      csp:
        # Content-Security-Policy directives follow the Helmet format: https://helmetjs.github.io/#reference
        # Default Helmet Content-Security-Policy values can be removed by setting the key to false
        connect-src: ["'self'", 'http:', 'https:']
      cors:
        origin: https://backstage.agardner.hotday.keptn.sh
        methods: [GET, HEAD, PATCH, POST, PUT, DELETE]
        credentials: true
      # If you want to use Postgres see https://backstage.io/docs/tutorials/switching-sqlite-postgres/
      database:
        client: better-sqlite3
        connection: ':memory:'

    # See http://backstage.io/docs/features/techdocs/configuration
    techdocs:
      builder: 'local'
      generator:
        runIn: 'local'
      publisher:
        type: 'local'

    # See https://backstage.io/docs/auth/
    auth:
      providers: {}

    # See https://backstage.io/docs/features/software-templates/configuration
    scaffolder: {}

    # See https://backstage.io/docs/integrations/
    integrations:
      github:
        - host: github.com
          token: ${GITHUB_TOKEN}
      gitlab:
        - host: gitlab.agardner.hotday.keptn.sh
          token: ${GITLAB_TOKEN}

    catalog:
      import:
        entityFilename: catalog-info.yaml
      locations: []
      providers:
        # GitHub discovery: https://backstage.io/docs/integrations/github/discovery/
        # Don't forget to define an integration for GitHub
        github:
          backstage:
            organization: backstage # TODO set your organization
            catalogPath: /catalog-info.yaml
            schedule:
              frequency: { minutes: 30 }
              timeout: { minutes: 3 }
        # GitLab discovery: https://backstage.io/docs/integrations/gitlab/discovery/
        # Don't forget to define an integration for your GitLab host(s)
        gitlab:
          public:
            host: gitlab.agardner.hotday.keptn.sh
            branch: main
            skipForkedRepos: true
            entityFilename: catalog-info.yaml
            schedule:
              frequency: { minutes: 30 }
              timeout: { minutes: 3 }

    # See https://backstage.io/docs/plugins/proxying/
    # proxy:
    #   # ArgoCD plugin: https://roadie.io/backstage/plugins/argo-cd/
    #   '/argocd/api':
    #     target: https://argocd.agardner.hotday.keptn.sh/api/v1/ # TODO update host
    #     changeOrigin: true
    #     # Set to false if your ArgoCD api has self-signed cert
    #     secure: true
    #     headers:
    #       Cookie:
    #         $env: ${ARGOCD_TOKEN}

    # See https://backstage.io/docs/features/kubernetes/configuration
    kubernetes:
      serviceLocatorMethod:
        type: multiTenant
      clusterLocatorMethods:
        - type: config
          clusters: []
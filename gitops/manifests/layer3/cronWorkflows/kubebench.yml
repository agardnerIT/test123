apiVersion: argoproj.io/v1alpha1
kind: CronWorkflow
metadata:
  name: kubebench
  namespace: default
  labels:
    dt.owner: "security_team"
spec:
  schedule: "* * * * *"
  concurrencyPolicy: "Replace"
  startingDeadlineSeconds: 0
  workflowSpec:
    entrypoint: kubebench
    hostPID: true
    volumes:
        - hostPath:
            path: /var/lib/etcd
          name: var-lib-etcd
        - hostPath:
            path: /var/lib/kubelet
          name: var-lib-kubelet
        - hostPath:
            path: /var/lib/kube-scheduler
          name: var-lib-kube-scheduler
        - hostPath:
            path: /var/lib/kube-controller-manager
          name: var-lib-kube-controller-manager
        - hostPath:
            path: /etc/systemd
          name: etc-systemd
        - hostPath:
            path: /lib/systemd
          name: lib-systemd
        - hostPath:
            path: /srv/kubernetes
          name: srv-kubernetes
        - hostPath:
            path: /etc/kubernetes
          name: etc-kubernetes
        - hostPath:
            path: /usr/bin
          name: usr-bin
        - hostPath:
            path: /etc/cni/net.d/
          name: etc-cni-netd
        - hostPath:
            path: /opt/cni/bin/
          name: opt-cni-bin
    templates:
    - name: kubebench
      container:
        #image: ghcr.io/dynatrace-oss/bizevent-pusher:v1.1.1
        image: docker.io/aquasec/kube-bench:v0.6.17
        command: ["kube-bench"]
        args: ["-v", "3"]
        volumeMounts:
          - mountPath: /var/lib/etcd
            name: var-lib-etcd
            readOnly: true
          - mountPath: /var/lib/kubelet
            name: var-lib-kubelet
            readOnly: true
          - mountPath: /var/lib/kube-scheduler
            name: var-lib-kube-scheduler
            readOnly: true
          - mountPath: /var/lib/kube-controller-manager
            name: var-lib-kube-controller-manager
            readOnly: true
          - mountPath: /etc/systemd
            name: etc-systemd
            readOnly: true
          - mountPath: /lib/systemd/
            name: lib-systemd
            readOnly: true
          - mountPath: /srv/kubernetes/
            name: srv-kubernetes
            readOnly: true
          - mountPath: /etc/kubernetes
            name: etc-kubernetes
            readOnly: true
          - mountPath: /usr/local/mount-from-host/bin
            name: usr-bin
            readOnly: true
          - mountPath: /etc/cni/net.d/
            name: etc-cni-netd
            readOnly: true
          - mountPath: /opt/cni/bin/
            name: opt-cni-bin
            readOnly: true
        #command: [sh, -c]
        # args: [
        #   "--tenant",
        #   "$(TENANT_URL)",
        #   "--oauth-client-id",
        #   "$(OAUTH_CLIENT_ID)",
        #   "--oauth-client-secret",
        #   "$(OAUTH_CLIENT_SECRET)",
        #   "--account_urn",
        #   "$(ACCOUNT_URN)",
        #   "--payload",
        #   "{ \"type\": \"workflow.execution\", \"app_name\": \"new-test-cron-wf\" }"
        # ]
        # env:
        # - name: TENANT_URL
        #   valueFrom:
        #     secretKeyRef:
        #       name: dt-bizevent-oauth-details
        #       key: dtTenant
        # - name: OAUTH_CLIENT_ID
        #   valueFrom:
        #     secretKeyRef:
        #       name: dt-bizevent-oauth-details
        #       key: oAuthClientID
        # - name: OAUTH_CLIENT_SECRET
        #   valueFrom:
        #     secretKeyRef:
        #       name: dt-bizevent-oauth-details
        #       key: oAuthClientSecret
        # - name: ACCOUNT_URN
        #   valueFrom:
        #     secretKeyRef:
        #       name: dt-bizevent-oauth-details
        #       key: accountURN

# apiVersion: argoproj.io/v1alpha1
# kind: CronWorkflow
# metadata:
#   name: test-cron-wf
#   namespace: default
# spec:
#   schedule: "* * * * *"
#   concurrencyPolicy: "Replace"
#   startingDeadlineSeconds: 0
#   workflowSpec:
#     entrypoint: test-cron-wf
#     templates:
#     - name: test-cron-wf
#       image: ghcr.io/dynatrace-oss/bizevent-pusher:v1.1.1
#       args: [
#         "--tenant",
#         "$(TENANT_URL)",
#         "--oauth-client-id",
#         "$(OAUTH_CLIENT_ID)",
#         "--oauth-client-secret",
#         "$(OAUTH_CLIENT_SECRET)",
#         "--account_urn",
#         "$(ACCOUNT_URN)",
#         "--payload",
#         "{ \"type\": \"workflow.execution\", \"app_name\": \"test-cron-wf\" }"
#       ]
#       env:
#       - name: TENANT_URL
#         valueFrom:
#           secretKeyRef:
#             name: dt-bizevent-oauth-details
#             key: dtTenant
#       - name: OAUTH_CLIENT_ID
#         valueFrom:
#           secretKeyRef:
#             name: dt-bizevent-oauth-details
#             key: oAuthClientID
#       - name: OAUTH_CLIENT_SECRET
#         valueFrom:
#           secretKeyRef:
#             name: dt-bizevent-oauth-details
#             key: oAuthClientSecret
#       - name: ACCOUNT_URN
#         valueFrom:
#           secretKeyRef:
#             name: dt-bizevent-oauth-details
#             key: accountURN
#     container:
#       image: alpine:3.6
#       command: [sh, -c]
#       args: ["echo hello from cron workflow; sleep 5"]